import asyncio
from bot.addresses_storage import load_addresses

class PositionMonitor:
    def __init__(self, api_client, telegram_client):
        self.api = api_client
        self.telegram = telegram_client
        self.previous_positions = {}

    async def start(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –≤—Å–µ—Ö –∞–¥—Ä–µ—Å–æ–≤ –∏–∑ JSON"""
        addresses = load_addresses()
        if not addresses:
            print("‚ö†Ô∏è –ù–µ—Ç –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.")
            return

        for address, name in addresses.items():
            positions = self.api.get_positions(address)
            self.previous_positions[address] = positions or set()

            display_name = f"üë§ {name}" if name else "–ë–µ–∑ –∏–º–µ–Ω–∏"
            url = f"https://hypurrscan.io/address/{address}"
            msg = f"üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è\n{display_name}\n{url}\n"
            if positions:
                msg += f"üéØ –¢–µ–∫—É—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏: {', '.join(positions)}"
            else:
                msg += "‚ö†Ô∏è –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π."

            await self.telegram.send_message(msg)

        if not hasattr(self, "monitoring_task") or self.monitoring_task.done():
            self.monitoring_task = asyncio.create_task(self.monitor_loop())  # üëà –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!

    async def monitor_loop(self):
        """–¶–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞–¥—Ä–µ—Å–æ–≤"""
        while True:
            addresses = load_addresses()
            for address, name in addresses.items():
                current_positions = self.api.get_positions(address)

                if current_positions is None:
                    continue

                prev_positions = self.previous_positions.get(address, set())
                if current_positions != prev_positions:
                    added = current_positions - prev_positions
                    removed = prev_positions - current_positions

                    message = f"üîî **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è {name}**\n"
                    if added:
                        message += f"‚ûï –û—Ç–∫—Ä—ã—Ç—ã –Ω–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏: {', '.join(added)}\n"
                    if removed:
                        message += f"‚ùå –ó–∞–∫—Ä—ã—Ç—ã –ø–æ–∑–∏—Ü–∏–∏: {', '.join(removed)}\n"

                    asyncio.create_task(self.telegram.send_message(message))
                    self.previous_positions[address] = current_positions

            await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥
