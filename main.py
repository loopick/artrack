from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from telegram import Update
from bot.telegram_client import TelegramClient
from bot.hyper_api import HyperAPI
from bot.position_monitor import PositionMonitor
from bot.addresses_storage import add_address, remove_address, load_addresses
import asyncio

telegram = TelegramClient()
api = HyperAPI()
monitor = PositionMonitor(api, telegram)

# === –ö–æ–º–∞–Ω–¥—ã ===
async def add(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add <–∞–¥—Ä–µ—Å> [–∏–º—è]")
        return

    address = context.args[0]
    name = " ".join(context.args[1:]) if len(context.args) > 1 else ""  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏–º—è, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å

    add_address(address, name)
    await update.message.reply_text(f"‚úÖ –ê–¥—Ä–µ—Å {address} –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ '{name}'")


async def remove(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏ –∞–¥—Ä–µ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /remove")
        return
    address = context.args[0]
    if remove_address(address):
        await update.message.reply_text(f"üóëÔ∏è –ê–¥—Ä–µ—Å —É–¥–∞–ª—ë–Ω: {address}")
    else:
        await update.message.reply_text(f"‚ö†Ô∏è –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω: {address}")

async def list_addresses(update: Update, context: ContextTypes.DEFAULT_TYPE):
    addresses = load_addresses()
    if addresses:
        msg = "üìú –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∞–¥—Ä–µ—Å–∞:\n"
        for address, name in addresses.items():
            display_name = f"({name})" if name else ""
            msg += f"üîπ {display_name} https://hypurrscan.io/address/{address}\n"
    else:
        msg = "‚ÑπÔ∏è –ü–æ–∫–∞ –Ω–µ—Ç –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è."

    await update.message.reply_text(msg)


# === –°—Ç–∞—Ä—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ===
async def on_startup(app):
    addresses = load_addresses()
    if not addresses:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –í addresses.json –ù–ï–¢ –ê–î–†–ï–°–û–í!")
    asyncio.create_task(monitor.start())

# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    app = ApplicationBuilder()\
        .token(telegram.bot.token)\
        .post_init(on_startup)\
        .build()

    app.add_handler(CommandHandler("add", add))
    app.add_handler(CommandHandler("remove", remove))
    app.add_handler(CommandHandler("list", list_addresses))

    print("ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã!")
    app.run_polling()
